package map;

import java.util.HashMap;
import java.util.Map;

public class OrdenacaoMap {

	public static void main(String[] args) {
		
	System.out.println("Exbia a coleção de Ordem Aleatoria:");
	
	Map<String, Livro> meusLivros = new HashMap<>() {
		
		private static final long serialVersionUID = 1L;

	{
		
		put("Hawking, Stephen", new Livro ("Uma Breve Historia do Tempo", 256));
		put("Duhigg, Charles", new Livro ("O poder do Habiro", 408));
		put("Harari, Yuval Noah", new Livro ("21 Lições do seculo 21", 432));
		
	}};
	
	for (Map.Entry<String, Livro> livro : meusLivros.entrySet())
			System.out.println(livro.getKey()+ " - " + livro.getValue().getNome());		

	}

}


class Livro {
	private String nome;
	private Integer paginas;
	
	public Livro(String nome, Integer paginas) {
		super();
		this.nome = nome;
		this.paginas = paginas;
	}

	public String getNome() {
		return nome;
	}

	public Integer getPaginas() {
		return paginas;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((nome == null) ? 0 : nome.hashCode());
		result = prime * result + ((paginas == null) ? 0 : paginas.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Livro other = (Livro) obj;
		if (nome == null) {
			if (other.nome != null)
				return false;
		} else if (!nome.equals(other.nome))
			return false;
		if (paginas == null) {
			if (other.paginas != null)
				return false;
		} else if (!paginas.equals(other.paginas))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Livro [nome=" + nome + ", paginas=" + paginas + "]";
	}
	
	
}